'use strict';

var React = require('react');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);

    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }

    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit(arr, i) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var getAvatarList = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {
    var fileName, repo, owner, url, data;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            fileName = _ref.fileName, repo = _ref.repo, owner = _ref.owner;
            url = "https://proapi.azurewebsites.net/doc/getAvatarList?filename=".concat(fileName, "&owner=").concat(owner, "&repo=").concat(repo);
            _context.next = 4;
            return fetch(url, {
              mode: 'cors'
            }).then(function (res) {
              return res.json();
            }).catch(function (e) {
              return console.log(e);
            });

          case 4:
            data = _context.sent;

            if (data) {
              _context.next = 7;
              break;
            }

            return _context.abrupt("return", []);

          case 7:
            return _context.abrupt("return", data);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function getAvatarList(_x) {
    return _ref2.apply(this, arguments);
  };
}();

var AvatarList = function AvatarList(_ref3) {
  var className = _ref3.className,
      renderItem = _ref3.renderItem,
      repo = _ref3.repo,
      owner = _ref3.owner,
      style = _ref3.style,
      fileName = _ref3.fileName;

  var _useState = React.useState([]),
      _useState2 = _slicedToArray(_useState, 2),
      list = _useState2[0],
      setList = _useState2[1];

  var _useState3 = React.useState(true),
      _useState4 = _slicedToArray(_useState3, 2),
      loading = _useState4[0],
      setLoading = _useState4[1];

  React.useEffect(function () {
    setLoading(true);
    getAvatarList({
      owner: owner,
      repo: repo,
      fileName: fileName
    }).then(function (data) {
      setList(data);
      setLoading(false);
    }).catch(function () {
      setLoading(false);
    });
  }, [owner, repo, fileName]);

  if (loading) {
    return /*#__PURE__*/React__default['default'].createElement("div", {
      className: className,
      style: _objectSpread2({
        display: 'flex',
        listStyle: 'none',
        margin: 0,
        padding: 0
      }, style)
    }, renderItem && renderItem({}, true) || /*#__PURE__*/React__default['default'].createElement("span", null, "loading"));
  }

  return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement("ul", {
    className: className,
    style: _objectSpread2({
      display: 'flex',
      listStyle: 'none',
      margin: 0,
      padding: 0,
      flexFlow: 'wrap'
    }, style)
  }, list.map(function (item) {
    if (renderItem) {
      return renderItem(item, loading);
    }

    return /*#__PURE__*/React__default['default'].createElement("li", {
      style: {
        marginRight: 8,
        borderRadius: 20,
        overflow: 'hidden',
        border: '1px solid #ddd'
      }
    }, /*#__PURE__*/React__default['default'].createElement("a", {
      href: "https://github.com/".concat(item.username)
    }, /*#__PURE__*/React__default['default'].createElement("img", {
      width: 40,
      src: item.url,
      alt: item.username
    })));
  })));
};

module.exports = AvatarList;
